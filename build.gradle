ext {

    //Library
    appVersionCode = 1
    appVersionName = "1.0.0"
    libraryDate = " built on " + getDate()
    libraryCode = 1
    libraryVersion = "1.0.0"

    //Support and Build tools version

    compileSdkVersion = 28
    minSdk = 21
    targetSdkVersion = 28
//    supportLibraryVersion
    androidXsupportLibraryVersion = '1.0.2'
    playServicesVersion = '17.0.0'
    kotlin_version = '1.3.50'
    core_version = "1.1.0"
    gradleVersion = '3.2.1'
    lifecycle_version = '2.0.0'
    archExtensionsVer = '1.1.1'
    room_version = "2.1.0"
    gsonVersion = '2.8.2'
    glideVer = '4.11.0'
    dagger2Version = '2.13'
    okHttp = "3.8.1"
    retrofit = "2.4.0"
    rxJavaVersion = "2.1.5"
    rxAndroidVersion = "2.1.1"
    oneSignalVersion = "3.12.6"
    archLib = [

            // ViewModel and LiveData
            extensions       : "androidx.lifecycle:lifecycle-extensions:${lifecycle_version}",
            // alternatively - just ViewModel
            viewModel        : "androidx.lifecycle:lifecycle-viewmodel:${lifecycle_version}", // use -ktx for Kotlin
            // alternatively - just LiveData
            liveData         : "androidx.lifecycle:lifecycle-livedata:${lifecycle_version}",
            // alternatively - Lifecycles only (no ViewModel or LiveData). Some UI
            //     AndroidX libraries use this lightweight import for Lifecycle
            lifecycle        : "androidx.lifecycle:lifecycle-runtime:$lifecycle_version",
            lifecycle_common : "androidx.lifecycle:lifecycle-common:$lifecycle_version",

            lifecyclecompiler: "androidx.lifecycle:lifecycle-compiler:${lifecycle_version}", // use kapt for Kotlin
            // alternately - if using Java8, use the following instead of lifecycle-compiler
            commonJava8      : "androidx.lifecycle:lifecycle-common-java8:${lifecycle_version}",

            // optional - ReactiveStreams support for LiveData
            reactiveStreams  : "androidx.lifecycle:lifecycle-reactivestreams:${lifecycle_version}", // use -ktx for Kotlin

//            // optional - Test helpers for LiveData
            coreTesting      : "androidx.arch.core:core-testing:${lifecycle_version}"
    ]
    room = [
            runtime : "androidx.room:room-runtime:${room_version}",
            compiler: "androidx.room:room-compiler:${room_version}"
    ]

    playServices = [
            GooglePlus        : "com.google.android.gms:play-services-plus:${playServicesVersion}",
            GoogleAccountLogin: "com.google.android.gms:play-services-auth:${playServicesVersion}",
            location          : "com.google.android.gms:play-services-location:${playServicesVersion}",
            map               : "com.google.android.gms:play-services-maps:${playServicesVersion}",
            places            : "com.google.android.gms:play-services-places:${playServicesVersion}",
            gcm               : "com.google.android.gms:play-services-gcm:${playServicesVersion}",
            firebase          : "com.google.firebase:firebase-core:${playServicesVersion}"
//            firebaseMessaging : "com.google.firebase:firebase-messaging:20.0.0"
    ]
    oneSignal = [
            messaging           : "com.onesignal:OneSignal:${oneSignalVersion}"
    ]
    // Google Material
    googleVer = "1.0.0"
    // AndroidX
    androidxVer = "1.0.0"
    lifecycleVer = "2.0.0"
    cardview = '1.0.0'
    constraintVer = "1.1.3"
    androidx = [
            recyclerView    : "androidx.recyclerview:recyclerview:${cardview}",
            appCompat       : "androidx.appcompat:appcompat:${androidXsupportLibraryVersion}",
            appCompatV13    : "com.android.support:support-v13:${androidXsupportLibraryVersion}",
            cardView        : "androidx.cardview:cardview:${cardview}",
            annotation      : "androidx.annotation:annotation:${androidXsupportLibraryVersion}",
            material        : "com.google.android.material:material:${cardview}",
            constraintLayout: "com.android.support.constraint:constraint-layout:${constraintVer}"
    ]
    retrofit = [
            retrofit         : "com.squareup.retrofit2:retrofit:${retrofit}",
            retrofitAdapter  : "com.squareup.retrofit2:adapter-rxjava2:${retrofit}",
            retrofitConverter: "com.squareup.retrofit2:converter-gson:${retrofit}",
            okHttp           : "com.squareup.okhttp3:okhttp:${okHttp}",
            okHttpLogger     : "com.squareup.okhttp3:logging-interceptor:${okHttp}"
    ]
    libraries = [

            //timber       : "com.jakewharton.timber:timber:${timberVer}",
            glide        : "com.github.bumptech.glide:glide:${glideVer}",
            glideCompiler: "com.github.bumptech.glide:compiler:${glideVer}",
            gson         : "com.google.code.gson:gson:${gsonVersion}",
            // rx
            rxAndroid    : "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            rxJava       : "io.reactivex.rxjava2:rxjava:${rxJavaVersion}",
    ]
    kotlin = [
            // Java
            Kotlin_core    : "androidx.core:core:${core_version}",
            // Kotlin
            Kotlin_core_ktx: "androidx.core:core:${core_version}",
            Kotlin         : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlin_version}"
    ]
    dagger_version = '2.21'
    dagger = [
            dagger   : "com.google.dagger:dagger:${dagger_version}",
            compiler : "com.google.dagger:dagger-compiler:${dagger_version}",
            support  : "com.google.dagger:dagger-android-support:${dagger_version}",
            android  : "com.google.dagger:dagger-android:${dagger_version}",
            processor: "com.google.dagger:dagger-android-processor:${dagger_version}"
    ]

}

def getDate() {
    def date = new Date()
    return date.format('MM-dd-yyyy')
}

buildscript {
    ext.kotlin_version = '1.3.50'
    repositories {
        google()
        jcenter()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.gms:google-services:4.3.2'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://jitpack.io" }

    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
